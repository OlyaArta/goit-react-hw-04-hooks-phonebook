{"version":3,"sources":["components/filter/Filter.module.css","components/container/Container.module.css","components/form/Form.module.css","components/container/Container.js","components/form/Form.js","components/contactList/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js","components/contactList/Contact.module.css"],"names":["module","exports","Container","children","className","s","container","Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","form","htmlFor","label","type","pattern","title","required","onChange","id","input","btn","Component","ContactItem","onDeleteContact","onClick","button","ContactList","contacts","list","map","Filter","App","filter","addContact","newContact","uuidv4","some","contact","alert","watchFilter","event","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","results","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9fad790.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2fXuQ\",\"input\":\"Filter_input__D62YX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1JSiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2kJpJ\",\"label\":\"Form_label__3f0X-\",\"input\":\"Form_input__6q7Rs\",\"btn\":\"Form_btn__2Ip2x\"};","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label htmlFor={this.nameInputId} className={s.label}>\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n            className={s.input}\r\n          />\r\n\r\n          <label htmlFor={this.numberInputId} className={s.label}>\r\n            Number\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n            className={s.input}\r\n          />\r\n\r\n          <button type=\"submit\" className={s.btn}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// Form.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>{name}: </span>\r\n      <span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={s.button}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","// import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={onDeleteContact}\r\n          key={id}\r\n          id={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// class ContactList extends Component {\r\n//   render() {\r\n//     const contacts = this.props.contacts;\r\n//     const deleteContacts = this.props.onDeleteContact;\r\n//     console.log(contacts);\r\n//     return (\r\n//       <ul>\r\n//         {contacts.map(({ id, name, number }) => (\r\n//           <ContactItem\r\n//             name={name}\r\n//             number={number}\r\n//             onDeleteContact={deleteContacts}\r\n//             key={id}\r\n//             id={id}\r\n//           />\r\n//         ))}\r\n//       </ul>\r\n//     );\r\n//   }\r\n// }\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./container/Container\";\nimport Form from \"./form/Form\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({ name, number }) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => {\n      if (contacts.some((contact) => contact.name === name)) {\n        return alert(`${name} is already in contacts!`);\n      }\n      return {\n        contacts: [newContact, ...contacts],\n      };\n    });\n  };\n  // this.setState(({ contacts }) => ({\n  //   contacts: [newContact, ...contacts],\n  // }));\n\n  watchFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  componentDidMount() {\n    console.log(\"something\");\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"tada\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const results = this.filterContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.watchFilter} />\n        <ContactList contacts={results} onDeleteContact={this.deleteContact} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__rbyrn\",\"button\":\"Contact_button__HzRuM\"};"],"sourceRoot":""}